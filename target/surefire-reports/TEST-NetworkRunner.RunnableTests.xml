<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="NetworkRunner.RunnableTests" time="13.952" tests="50" errors="0" skipped="0" failures="14">
  <properties>
    <property name="cucumber.features" value="src/main/resources/features/F1_NewPostByExistingUser.feature,&#10;			src/main/resources/features/F2_UpdatingAnExistingPost.feature,&#10;			src/main/resources/features/F3_PatchingAnExistingResource.feature,&#10;			src/main/resources/features/F4_FilteringthroughQueryParams.feature,&#10;			src/main/resources/features/F5_DeleteAnExistingPost.feature,&#10;			src/main/resources/features/F6_Comments_operations.feature,&#10;			src/main/resources/features/F7_GetTheExistingPostDetails.feature"/>
    <property name="gopherProxySet" value="false"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/test-classes:/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/classes:/Users/hema/.m2/repository/io/cucumber/cucumber-java/7.11.0/cucumber-java-7.11.0.jar:/Users/hema/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-core/7.11.0/cucumber-core-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-gherkin/7.11.0/cucumber-gherkin-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.11.0/cucumber-gherkin-messages-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/gherkin/26.0.3/gherkin-26.0.3.jar:/Users/hema/.m2/repository/io/cucumber/messages/21.0.1/messages-21.0.1.jar:/Users/hema/.m2/repository/io/cucumber/tag-expressions/5.0.1/tag-expressions-5.0.1.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-expressions/16.1.1/cucumber-expressions-16.1.1.jar:/Users/hema/.m2/repository/io/cucumber/datatable/7.11.0/datatable-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-plugin/7.11.0/cucumber-plugin-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/docstring/7.11.0/docstring-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/html-formatter/20.2.1/html-formatter-20.2.1.jar:/Users/hema/.m2/repository/io/cucumber/junit-xml-formatter/0.1.0/junit-xml-formatter-0.1.0.jar:/Users/hema/.m2/repository/io/cucumber/ci-environment/9.1.0/ci-environment-9.1.0.jar:/Users/hema/.m2/repository/io/rest-assured/json-path/5.3.0/json-path-5.3.0.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy-json/4.0.6/groovy-json-4.0.6.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy/4.0.6/groovy-4.0.6.jar:/Users/hema/.m2/repository/io/rest-assured/rest-assured-common/5.3.0/rest-assured-common-5.3.0.jar:/Users/hema/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/Users/hema/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/Users/hema/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.14.1/jackson-databind-2.14.1.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.14.1/jackson-annotations-2.14.1.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.14.1/jackson-core-2.14.1.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.11.0/cucumber-junit-platform-engine-7.11.0.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.9.2/junit-platform-suite-engine-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-api/1.9.2/junit-platform-suite-api-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.9.2/junit-platform-suite-commons-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-launcher/1.9.2/junit-platform-launcher-1.9.2.jar:/Users/hema/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-java8/7.11.0/cucumber-java8-7.11.0.jar:/Users/hema/.m2/repository/net/jodah/typetools/0.6.3/typetools-0.6.3.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite/1.9.2/junit-platform-suite-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:/Users/hema/.m2/repository/io/rest-assured/rest-assured/5.3.0/rest-assured-5.3.0.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy-xml/4.0.6/groovy-xml-4.0.6.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/Users/hema/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/hema/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/Users/hema/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar:/Users/hema/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/Users/hema/.m2/repository/io/rest-assured/xml-path/5.3.0/xml-path-5.3.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-junit/7.11.0/cucumber-junit-7.11.0.jar:/Users/hema/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/hema/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/hema/.m2/repository/org/junit/vintage/junit-vintage-engine/5.9.2/junit-vintage-engine-5.9.2.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="user.country.format" value="IN"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="user.country" value="GB"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/surefire/surefirebooter-20230123212550753_3.jar /Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/surefire 2023-01-23T21-25-49_770-jvmRun1 surefire-20230123212550753_1tmp surefire_0-20230123212550753_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="surefire.test.class.path" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/test-classes:/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/classes:/Users/hema/.m2/repository/io/cucumber/cucumber-java/7.11.0/cucumber-java-7.11.0.jar:/Users/hema/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-core/7.11.0/cucumber-core-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-gherkin/7.11.0/cucumber-gherkin-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.11.0/cucumber-gherkin-messages-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/gherkin/26.0.3/gherkin-26.0.3.jar:/Users/hema/.m2/repository/io/cucumber/messages/21.0.1/messages-21.0.1.jar:/Users/hema/.m2/repository/io/cucumber/tag-expressions/5.0.1/tag-expressions-5.0.1.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-expressions/16.1.1/cucumber-expressions-16.1.1.jar:/Users/hema/.m2/repository/io/cucumber/datatable/7.11.0/datatable-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-plugin/7.11.0/cucumber-plugin-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/docstring/7.11.0/docstring-7.11.0.jar:/Users/hema/.m2/repository/io/cucumber/html-formatter/20.2.1/html-formatter-20.2.1.jar:/Users/hema/.m2/repository/io/cucumber/junit-xml-formatter/0.1.0/junit-xml-formatter-0.1.0.jar:/Users/hema/.m2/repository/io/cucumber/ci-environment/9.1.0/ci-environment-9.1.0.jar:/Users/hema/.m2/repository/io/rest-assured/json-path/5.3.0/json-path-5.3.0.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy-json/4.0.6/groovy-json-4.0.6.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy/4.0.6/groovy-4.0.6.jar:/Users/hema/.m2/repository/io/rest-assured/rest-assured-common/5.3.0/rest-assured-common-5.3.0.jar:/Users/hema/.m2/repository/org/apache/commons/commons-lang3/3.11/commons-lang3-3.11.jar:/Users/hema/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar:/Users/hema/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.14.1/jackson-databind-2.14.1.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.14.1/jackson-annotations-2.14.1.jar:/Users/hema/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.14.1/jackson-core-2.14.1.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.11.0/cucumber-junit-platform-engine-7.11.0.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.9.2/junit-platform-suite-engine-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-api/1.9.2/junit-platform-suite-api-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.9.2/junit-platform-suite-commons-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-launcher/1.9.2/junit-platform-launcher-1.9.2.jar:/Users/hema/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-java8/7.11.0/cucumber-java8-7.11.0.jar:/Users/hema/.m2/repository/net/jodah/typetools/0.6.3/typetools-0.6.3.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-suite/1.9.2/junit-platform-suite-1.9.2.jar:/Users/hema/.m2/repository/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar:/Users/hema/.m2/repository/io/rest-assured/rest-assured/5.3.0/rest-assured-5.3.0.jar:/Users/hema/.m2/repository/org/apache/groovy/groovy-xml/4.0.6/groovy-xml-4.0.6.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar:/Users/hema/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/hema/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/Users/hema/.m2/repository/org/apache/httpcomponents/httpmime/4.5.13/httpmime-4.5.13.jar:/Users/hema/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar:/Users/hema/.m2/repository/org/ccil/cowan/tagsoup/tagsoup/1.2.1/tagsoup-1.2.1.jar:/Users/hema/.m2/repository/io/rest-assured/xml-path/5.3.0/xml-path-5.3.0.jar:/Users/hema/.m2/repository/io/cucumber/cucumber-junit/7.11.0/cucumber-junit-7.11.0.jar:/Users/hema/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/Users/hema/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/hema/.m2/repository/org/junit/vintage/junit-vintage-engine/5.9.2/junit-vintage-engine-5.9.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/hema"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"/>
    <property name="basedir" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity"/>
    <property name="file.separator" value="/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity/target/surefire/surefirebooter-20230123212550753_3.jar"/>
    <property name="sun.boot.class.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/resources.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/rt.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/sunrsasign.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jsse.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jce.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/charsets.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jfr.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/classes"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="cucumber.plugin" value="pretty, html:src/test/resources/Reports/Results_2023-01-23T20:25:47Z.html"/>
    <property name="java.runtime.version" value="1.8.0_211-b12"/>
    <property name="user.name" value="hema"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.16"/>
    <property name="java.endorsed.dirs" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/hema/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/mf/j0n3s12n1tlf4g1yg6gg3_1h0000gn/T/"/>
    <property name="java.version" value="1.8.0_211"/>
    <property name="user.dir" value="/Users/hema/eclipse-workspace/SocialNetworkingCommunity"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/Users/hema/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.211-b12"/>
    <property name="java.ext.dirs" value="/Users/hema/Library/Java/Extensions:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="52.0"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase name="Example #1.1" classname="Examples" time="6.107">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network                                      &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body:I am very happy posting in community user ID:1 title:First post


    Creating a new resource post :1:First post:I am very happy posting in community

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"First post"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"I am very happy posting in community"&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 1,
    "body": "I am very happy posting in community",
    "title": "First post",
    "id": 101
}

    validated the response and is :{
      "userId": 1,
      "body": "I am very happy posting in community",
      "title": "First post",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
    <system-err><![CDATA[Jan 23, 2023 9:25:51 PM io.cucumber.junit.platform.engine.DiscoverySelectorResolver warnWhenCucumberFeaturesPropertyIsUsed
WARNING: Discovering tests using the cucumber.features property. Other discovery selectors are ignored!
Please request/upvote/sponsor/ect better support for JUnit 5 discovery selectors.
See: https://github.com/cucumber/cucumber-jvm/pull/2498
]]></system-err>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.887">
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                  &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:13&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Mango Wood is very hard user ID:1 postID: 1 title:Mango Wood


    Updating an existing resource  resource post :1:Mango Wood:Mango Wood is very hard

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mango Wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mango Wood is very hard"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "body": "Mango Wood is very hard",
    "title": "Mango Wood",
    "id": 1
}

    validated the response and is :{
      "userId": 1,
      "body": "Mango Wood is very hard",
      "title": "Mango Wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                   &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.862">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                    &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:1
1****Asia****Asia  has Mount Everest****1****8849

    Creating a PATCH request with values : body:Asia  has Mount Everest user ID:1 postID: 1 title:Asia


    Patching the an existing resource  :1:Asia:Asia  has Mount Everest

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Asia"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Asia  has Mount Everest"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m8849&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 1,
    "title": "Asia",
    "body": "Asia  has Mount Everest",
    "height": 8849
}

    validated the response and is :{
      "userId": 1,
      "id": 1,
      "title": "Asia",
      "body": "Asia  has Mount Everest",
      "height": 8849
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                          &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 1,
    "title": "Asia",
    "body": "Asia  has Mount Everest",
    "height": 8849
}

    patched response  is :{
      "userId": 1,
      "id": 1,
      "title": "Asia",
      "body": "Asia  has Mount Everest",
      "height": 8849
    }


    Patching the an existing resource is sucessful at postid :1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                        &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.785">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :1

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:09 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 989
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=9.0000103227794e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=ezKYLqnSFlwVCiPlUsAyE5mQYqkSQFpGqJ4pH7c%2BkiL8GZ02tSA8CrLyBs1Z%2FO2QJ7Hg7hmiV5Ce5aTtLvhWiSSSxG3JsA%2F%2F8VbgFEnRS9xXHwlmp1uZg2iwEECpiGtOtSU9%2B2o%2BejEnvh6OQZol"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e343409bf5bfe6-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :1Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@c212536status code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.464">
    <failure message="1 expectation failed.&#10;JSON path [0].name doesn&apos;t match.&#10;Expected: quo vero reiciendis velit similique earum&#10;  Actual: id labore ex et quam laborum&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
JSON path [0].name doesn't match.
Expected: quo vero reiciendis velit similique earum
  Actual: id labore ex et quam laborum

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
	at io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(ReadingExistngPostDetailsDefns.java:105)
	at ✽.verify the details of comments made by userid 1 with values 1(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:10)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify the comments based on postid                &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:15&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                           &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to get the &amp#27;[0m&amp#27;[32m&amp#27;[1m"comments"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_get_the(java.lang.String,java.lang.Integer)&amp#27;[0m
  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
JSON path [0].name doesn't match.
Expected: quo vero reiciendis velit similique earum
  Actual: id labore ex et quam laborum

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
	at io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(ReadingExistngPostDetailsDefns.java:105)
	at ✽.verify the details of comments made by userid 1 with values 1(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:10)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.596">
    <system-out><![CDATA[
Scenario Outline: Verify comments deleted based on post id                                          &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:28&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
[
    {
        "postId": 1,
        "id": 1,
        "name": "id labore ex et quam laborum",
        "email": "Eliseo@gardner.biz",
        "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
    }
]

    [
      {
        "postId": 1,
        "id": 1,
        "name": "id labore ex et quam laborum",
        "email": "Eliseo@gardner.biz",
        "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
      }
    ]

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to delete the comments &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m and userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                 &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_delete_the_comments_and_userid(java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m deleted with empy respnse body&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values_deleted_with_empy_respnse_body(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.445">
    <failure message="the response is not as expected parameter values does not match" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments posted based on post id                                                                                                    &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:41&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                                       &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to post the comments  name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[32m email &amp#27;[0m&amp#27;[32m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[32m and body &amp#27;[0m&amp#27;[32m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[32m made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m posted&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m

    Creating a Post comment request with values : body:Elephant is an intelligent animal user ID:1 postID: 1 body:Elephant is an intelligent animalemail:animals@zoo.biz

{
    "postId": "1",
    "id": 501,
    "name": "Elephant",
    "email": "animals@zoo.biz",
    "body": "Elephant is an intelligent animal"
}

     the response and is :{
      "postId": "1",
      "id": 501,
      "name": "Elephant",
      "email": "animals@zoo.biz",
      "body": "Elephant is an intelligent animal"
    }

  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m posted&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.081">
    <failure message="the response is null" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments put/edit based on post id                                                                                                  &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:54&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                                       &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[31mWhen &amp#27;[0m&amp#27;[31mI want to post the comments  name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m edited&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mverify the details of comments name &amp#27;[0m&amp#27;[36m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[36m email &amp#27;[0m&amp#27;[36m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[36m and body &amp#27;[0m&amp#27;[36m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[36m made by userid &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m with values &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m edited&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.611">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network                                      &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body:I am very happy posting in community user ID:1 title:First post


    Creating a new resource post :1:First post:I am very happy posting in community

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"First post"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"I am very happy posting in community"&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 1,
    "body": "I am very happy posting in community",
    "title": "First post",
    "id": 101
}

    validated the response and is :{
      "userId": 1,
      "body": "I am very happy posting in community",
      "title": "First post",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
    <system-err><![CDATA[&amp#27;[32m&amp#27;[1m┌───────────────────────────────────────────────────────────────────────────────────┐&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Share your Cucumber Report with your team at &amp#27;[36m&amp#27;[1m&amp#27;[4mhttps://reports.cucumber.io&amp#27;[0m          &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Activate publishing with one of the following:                                    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/cucumber.properties:          &amp#27;[36mcucumber.publish.enabled&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/junit-platform.properties:    &amp#27;[36mcucumber.publish.enabled&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Environment variable:                            &amp#27;[36mCUCUMBER_PUBLISH_ENABLED&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m    &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m JUnit:                                           &amp#27;[36m@CucumberOptions&amp#27;[0m(publish = &amp#27;[36mtrue&amp#27;[0m) &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m More information at &amp#27;[36mhttps://cucumber.io/docs/cucumber/environment-variables/&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m Disable this message with one of the following:                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m                                                                                   &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/cucumber.properties:          &amp#27;[36mcucumber.publish.quiet&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m│&amp#27;[0m src/test/resources/junit-platform.properties:    &amp#27;[36mcucumber.publish.quiet&amp#27;[0m=&amp#27;[36mtrue&amp#27;[0m      &amp#27;[32m&amp#27;[1m│&amp#27;[0m
&amp#27;[32m&amp#27;[1m└───────────────────────────────────────────────────────────────────────────────────┘&amp#27;[0m
]]></system-err>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.816">
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                  &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:13&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Mango Wood is very hard user ID:1 postID: 1 title:Mango Wood


    Updating an existing resource  resource post :1:Mango Wood:Mango Wood is very hard

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mango Wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Mango Wood is very hard"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "body": "Mango Wood is very hard",
    "title": "Mango Wood",
    "id": 1
}

    validated the response and is :{
      "userId": 1,
      "body": "Mango Wood is very hard",
      "title": "Mango Wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                   &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.804">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                    &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:1
1****Asia****Asia  has Mount Everest****1****8849

    Creating a PATCH request with values : body:Asia  has Mount Everest user ID:1 postID: 1 title:Asia


    Patching the an existing resource  :1:Asia:Asia  has Mount Everest

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Asia"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Asia  has Mount Everest"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m8849&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 1,
    "title": "Asia",
    "body": "Asia  has Mount Everest",
    "height": 8849
}

    validated the response and is :{
      "userId": 1,
      "id": 1,
      "title": "Asia",
      "body": "Asia  has Mount Everest",
      "height": 8849
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                          &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 1,
    "title": "Asia",
    "body": "Asia  has Mount Everest",
    "height": 8849
}

    patched response  is :{
      "userId": 1,
      "id": 1,
      "title": "Asia",
      "body": "Asia  has Mount Everest",
      "height": 8849
    }


    Patching the an existing resource is sucessful at postid :1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                        &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.736">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :1

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:23 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 972
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=6.9999950937927e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=JxB72wVO5xF3MXmZVcdBlAgrdhw4SOVq0Sp14M8PMDVS0mHKi%2BrlaaVJe07gQIxlHlEKo48nXhXFCfrEXAWpnHtYlBtdvDPdllp3TudS%2FYumjndsRN0qhHFrvD%2FSfKmRmrO%2FFXdXMrTr9A7CDcrW"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e34399acd3503d-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :1Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@9a07409status code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.374">
    <failure message="1 expectation failed.&#10;JSON path [0].name doesn&apos;t match.&#10;Expected: quo vero reiciendis velit similique earum&#10;  Actual: id labore ex et quam laborum&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
JSON path [0].name doesn't match.
Expected: quo vero reiciendis velit similique earum
  Actual: id labore ex et quam laborum

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
	at io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(ReadingExistngPostDetailsDefns.java:105)
	at ✽.verify the details of comments made by userid 1 with values 1(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:10)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify the comments based on postid                &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:15&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                           &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to get the &amp#27;[0m&amp#27;[32m&amp#27;[1m"comments"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_get_the(java.lang.String,java.lang.Integer)&amp#27;[0m
  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
JSON path [0].name doesn't match.
Expected: quo vero reiciendis velit similique earum
  Actual: id labore ex et quam laborum

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
	at io.restassured.specification.ResponseSpecification$body$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(ReadingExistngPostDetailsDefns.java:105)
	at ✽.verify the details of comments made by userid 1 with values 1(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:10)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.599">
    <system-out><![CDATA[
Scenario Outline: Verify comments deleted based on post id                                          &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:28&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
[
    {
        "postId": 1,
        "id": 1,
        "name": "id labore ex et quam laborum",
        "email": "Eliseo@gardner.biz",
        "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
    }
]

    [
      {
        "postId": 1,
        "id": 1,
        "name": "id labore ex et quam laborum",
        "email": "Eliseo@gardner.biz",
        "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
      }
    ]

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to delete the comments &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m and userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                                 &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_delete_the_comments_and_userid(java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m deleted with empy respnse body&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values_deleted_with_empy_respnse_body(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.436">
    <failure message="the response is not as expected parameter values does not match" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments posted based on post id                                                                                                    &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:41&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                                       &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to post the comments  name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[32m email &amp#27;[0m&amp#27;[32m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[32m and body &amp#27;[0m&amp#27;[32m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[32m made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m posted&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m

    Creating a Post comment request with values : body:Elephant is an intelligent animal user ID:1 postID: 1 body:Elephant is an intelligent animalemail:animals@zoo.biz

{
    "postId": "1",
    "id": 501,
    "name": "Elephant",
    "email": "animals@zoo.biz",
    "body": "Elephant is an intelligent animal"
}

     the response and is :{
      "postId": "1",
      "id": 501,
      "name": "Elephant",
      "email": "animals@zoo.biz",
      "body": "Elephant is an intelligent animal"
    }

  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m posted&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.1" classname="Examples" time="0.007">
    <failure message="the response is null" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments put/edit based on post id                                                                                                  &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:54&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                                       &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[31mWhen &amp#27;[0m&amp#27;[31mI want to post the comments  name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m edited&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Elephant" email "animals@zoo.biz" and body "Elephant is an intelligent animal" made by userid 1 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mverify the details of comments name &amp#27;[0m&amp#27;[36m&amp#27;[1m"Elephant"&amp#27;[0m&amp#27;[36m email &amp#27;[0m&amp#27;[36m&amp#27;[1m"animals@zoo.biz"&amp#27;[0m&amp#27;[36m and body &amp#27;[0m&amp#27;[36m&amp#27;[1m"Elephant is an intelligent animal"&amp#27;[0m&amp#27;[36m made by userid &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m with values &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m edited&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.711">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network             &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:16&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body:post with empty title user ID:2 title:


    Creating a new resource post :2::post with empty title

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"post with empty title"&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 2,
    "body": "post with empty title",
    "title": "",
    "id": 101
}

    validated the response and is :{
      "userId": 2,
      "body": "post with empty title",
      "title": "",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                 &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.797">
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                   &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:14&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Teak wood is most durable user ID:2 postID: 1 title:Teak wood


    Updating an existing resource  resource post :2:Teak wood:Teak wood is most durable

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Teak wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Teak wood is most durable"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "body": "Teak wood is most durable",
    "title": "Teak wood",
    "id": 1
}

    validated the response and is :{
      "userId": 2,
      "body": "Teak wood is most durable",
      "title": "Teak wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.86">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                            &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:16&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 2
{
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 2,
      "title": "qui est esse",
      "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:2
1****NorthAmerica****NorthAmerica has Denail****2****6190

    Creating a PATCH request with values : body:NorthAmerica has Denail user ID:1 postID: 2 title:NorthAmerica


    Patching the an existing resource  :1:NorthAmerica:NorthAmerica has Denail

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"NorthAmerica"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"NorthAmerica has Denail"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m6190&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 2,
    "title": "NorthAmerica",
    "body": "NorthAmerica has Denail",
    "height": 6190
}

    validated the response and is :{
      "userId": 1,
      "id": 2,
      "title": "NorthAmerica",
      "body": "NorthAmerica has Denail",
      "height": 6190
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,2

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 2,
    "title": "NorthAmerica",
    "body": "NorthAmerica has Denail",
    "height": 6190
}

    patched response  is :{
      "userId": 1,
      "id": 2,
      "title": "NorthAmerica",
      "body": "NorthAmerica has Denail",
      "height": 6190
    }


    Patching the an existing resource is sucessful at postid :2

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.791">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:18&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 4
{
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 4,
      "title": "eum et est occaecati",
      "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :4

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:10 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 988
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=6.9999950937927e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=bYWcLNPADBlJhzyMCIGlbH5loryzUb0vwuAYCTtK0EtCWd9cXPRSbY8%2F1q6dH4yZdn%2FtAJg1EE2yDCZwwl%2F9JDZF9qq8EQebrgwR%2FoYjIrYWHawYLwdNS6%2BtV0sBXp6U7SsGtK02GUEVU1j0UWsd"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e343459951cc93-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :4Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@464ede1fstatus code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.436">
    <system-out><![CDATA[
Scenario Outline: Verify the comments based on postid                &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:16&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                           &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to get the &amp#27;[0m&amp#27;[32m&amp#27;[1m"comments"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_get_the(java.lang.String,java.lang.Integer)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.609">
    <system-out><![CDATA[
Scenario Outline: Verify comments deleted based on post id                                          &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:29&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
[
    {
        "postId": 1,
        "id": 2,
        "name": "quo vero reiciendis velit similique earum",
        "email": "Jayne_Kuhic@sydney.com",
        "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
    }
]

    [
      {
        "postId": 1,
        "id": 2,
        "name": "quo vero reiciendis velit similique earum",
        "email": "Jayne_Kuhic@sydney.com",
        "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
      }
    ]

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to delete the comments &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m and userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                 &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_delete_the_comments_and_userid(java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m deleted with empy respnse body&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values_deleted_with_empy_respnse_body(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.476">
    <failure message="the response is not as expected parameter values does not match" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments posted based on post id                                                                                           &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:42&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to post the comments  name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[32m email &amp#27;[0m&amp#27;[32m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[32m and body &amp#27;[0m&amp#27;[32m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[32m made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m posted&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m

    Creating a Post comment request with values : body:Fastest animal is Cheetah user ID:2 postID: 1 body:Fastest animal is Cheetahemail:animal@zoo.user

{
    "postId": "1",
    "id": 501,
    "name": "Cheetah",
    "email": "animal@zoo.user",
    "body": "Fastest animal is Cheetah"
}

     the response and is :{
      "postId": "1",
      "id": 501,
      "name": "Cheetah",
      "email": "animal@zoo.user",
      "body": "Fastest animal is Cheetah"
    }

  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m2&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m posted&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.009">
    <failure message="the response is null" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments put/edit based on post id                                                                                         &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:55&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[31mWhen &amp#27;[0m&amp#27;[31mI want to post the comments  name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m2&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m edited&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mverify the details of comments name &amp#27;[0m&amp#27;[36m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[36m email &amp#27;[0m&amp#27;[36m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[36m and body &amp#27;[0m&amp#27;[36m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[36m made by userid &amp#27;[0m&amp#27;[36m&amp#27;[1m2&amp#27;[0m&amp#27;[36m with values &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m edited&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.717">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network             &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:16&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body:post with empty title user ID:2 title:


    Creating a new resource post :2::post with empty title

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"post with empty title"&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 2,
    "body": "post with empty title",
    "title": "",
    "id": 101
}

    validated the response and is :{
      "userId": 2,
      "body": "post with empty title",
      "title": "",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                 &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.774">
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                   &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:14&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Teak wood is most durable user ID:2 postID: 1 title:Teak wood


    Updating an existing resource  resource post :2:Teak wood:Teak wood is most durable

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Teak wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Teak wood is most durable"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "body": "Teak wood is most durable",
    "title": "Teak wood",
    "id": 1
}

    validated the response and is :{
      "userId": 2,
      "body": "Teak wood is most durable",
      "title": "Teak wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,1

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                               &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.853">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                            &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:16&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 2
{
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 2,
      "title": "qui est esse",
      "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:2
1****NorthAmerica****NorthAmerica has Denail****2****6190

    Creating a PATCH request with values : body:NorthAmerica has Denail user ID:1 postID: 2 title:NorthAmerica


    Patching the an existing resource  :1:NorthAmerica:NorthAmerica has Denail

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"NorthAmerica"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"NorthAmerica has Denail"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m6190&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 2,
    "title": "NorthAmerica",
    "body": "NorthAmerica has Denail",
    "height": 6190
}

    validated the response and is :{
      "userId": 1,
      "id": 2,
      "title": "NorthAmerica",
      "body": "NorthAmerica has Denail",
      "height": 6190
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,2

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                             &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 2,
    "title": "NorthAmerica",
    "body": "NorthAmerica has Denail",
    "height": 6190
}

    patched response  is :{
      "userId": 1,
      "id": 2,
      "title": "NorthAmerica",
      "body": "NorthAmerica has Denail",
      "height": 6190
    }


    Patching the an existing resource is sucessful at postid :2

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.732">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:18&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 4
{
    "userId": 1,
    "id": 4,
    "title": "eum et est occaecati",
    "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 4,
      "title": "eum et est occaecati",
      "body": "ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :4

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m4&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:24 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 971
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=4.9999998736894e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=5s%2FdivX53500UnkW7jsqsdemiIFtDy3COlv%2Bg6zgzBaFnRev%2F7lvTJVrSK6qIstZKNOMKIBnkUTIODsC93j8sq9iQnmHi7C6fDacomC%2Fy2Of%2FLA02YDN2SRAAdnq95bKrDOcl51aJVy%2B19U%2FSGLU"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e3439e4fdd0054-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :4Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@77e1dacdstatus code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.404">
    <system-out><![CDATA[
Scenario Outline: Verify the comments based on postid                &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:16&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                           &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to get the &amp#27;[0m&amp#27;[32m&amp#27;[1m"comments"&amp#27;[0m&amp#27;[32m &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_get_the(java.lang.String,java.lang.Integer)&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.562">
    <system-out><![CDATA[
Scenario Outline: Verify comments deleted based on post id                                          &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:29&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                          &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
[
    {
        "postId": 1,
        "id": 2,
        "name": "quo vero reiciendis velit similique earum",
        "email": "Jayne_Kuhic@sydney.com",
        "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
    }
]

    [
      {
        "postId": 1,
        "id": 2,
        "name": "quo vero reiciendis velit similique earum",
        "email": "Jayne_Kuhic@sydney.com",
        "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
      }
    ]

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to delete the comments &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m and userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                 &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_delete_the_comments_and_userid(java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the details of comments made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m deleted with empy respnse body&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_made_by_userid_with_values_deleted_with_empy_respnse_body(java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.53">
    <failure message="the response is not as expected parameter values does not match" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments posted based on post id                                                                                           &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:42&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to post the comments  name &amp#27;[0m&amp#27;[32m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[32m email &amp#27;[0m&amp#27;[32m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[32m and body &amp#27;[0m&amp#27;[32m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[32m made by userid &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with values &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m posted&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m

    Creating a Post comment request with values : body:Fastest animal is Cheetah user ID:2 postID: 1 body:Fastest animal is Cheetahemail:animal@zoo.user

{
    "postId": "1",
    "id": 501,
    "name": "Cheetah",
    "email": "animal@zoo.user",
    "body": "Fastest animal is Cheetah"
}

     the response and is :{
      "postId": "1",
      "id": 501,
      "name": "Cheetah",
      "email": "animal@zoo.user",
      "body": "Fastest animal is Cheetah"
    }

  &amp#27;[31mThen &amp#27;[0m&amp#27;[31mverify the details of comments name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m2&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m posted&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is not as expected parameter values does not match
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_posted(ReadingExistngPostDetailsDefns.java:158)
	at ✽.verify the details of comments name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 posted(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:35)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.2" classname="Examples" time="0.014">
    <failure message="the response is null" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Verify new comments put/edit based on post id                                                                                         &amp#27;[90m# src/main/resources/features/F6_Comments_operations.feature:55&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m                                                                                                              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[31mWhen &amp#27;[0m&amp#27;[31mI want to post the comments  name &amp#27;[0m&amp#27;[31m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[31m email &amp#27;[0m&amp#27;[31m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[31m and body &amp#27;[0m&amp#27;[31m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[31m made by userid &amp#27;[0m&amp#27;[31m&amp#27;[1m2&amp#27;[0m&amp#27;[31m with values &amp#27;[0m&amp#27;[31m&amp#27;[1m1&amp#27;[0m&amp#27;[31m edited&amp#27;[0m   &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
      &amp#27;[31morg.opentest4j.AssertionFailedError: the response is null
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:135)
	at StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_post_the_comments_name_email_and_body_made_by_userid_with_values_edited(ReadingExistngPostDetailsDefns.java:181)
	at ✽.I want to post the comments  name "Cheetah" email "animal@zoo.user" and body "Fastest animal is Cheetah" made by userid 2 with values 1 edited(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F6_Comments_operations.feature:47)
&amp#27;[0m
  &amp#27;[36mThen &amp#27;[0m&amp#27;[36mverify the details of comments name &amp#27;[0m&amp#27;[36m&amp#27;[1m"Cheetah"&amp#27;[0m&amp#27;[36m email &amp#27;[0m&amp#27;[36m&amp#27;[1m"animal@zoo.user"&amp#27;[0m&amp#27;[36m and body &amp#27;[0m&amp#27;[36m&amp#27;[1m"Fastest animal is Cheetah"&amp#27;[0m&amp#27;[36m made by userid &amp#27;[0m&amp#27;[36m&amp#27;[1m2&amp#27;[0m&amp#27;[36m with values &amp#27;[0m&amp#27;[36m&amp#27;[1m1&amp#27;[0m&amp#27;[36m edited&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.verify_the_details_of_comments_name_email_and_body_made_by_userid_with_values_edited(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.754">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network            &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body: user ID:3 title:post with empty body


    Creating a new resource post :3:post with empty body:

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"post with empty body"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 3,
    "body": "",
    "title": "post with empty body",
    "id": 101
}

    validated the response and is :{
      "userId": 3,
      "body": "",
      "title": "post with empty body",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.827">
    <failure message="1 expectation failed.&#10;Expected status code &lt;201&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F2_UpdatingAnExistingPost.feature:9)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                               &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Acacia is an extremely durable wood user ID:2 postID: 1 title:Acacia Wood


    Updating an existing resource  resource post :2:Acacia Wood:Acacia is an extremely durable wood

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Acacia Wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Acacia is an extremely durable wood"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "body": "Acacia is an extremely durable wood",
    "title": "Acacia Wood",
    "id": 1
}

    validated the response and is :{
      "userId": 2,
      "body": "Acacia is an extremely durable wood",
      "title": "Acacia Wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mI want to verify the response status code  &amp#27;[0m&amp#27;[31m&amp#27;[1m201&amp#27;[0m                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F2_UpdatingAnExistingPost.feature:9)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.915">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                     &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 3
{
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 3,
      "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
      "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:3
1****Africa****Africa has KiliManjaro****3****5895

    Creating a PATCH request with values : body:Africa has KiliManjaro user ID:1 postID: 3 title:Africa


    Patching the an existing resource  :1:Africa:Africa has KiliManjaro

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Africa"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Africa has KiliManjaro"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m5895&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 3,
    "title": "Africa",
    "body": "Africa has KiliManjaro",
    "height": 5895
}

    validated the response and is :{
      "userId": 1,
      "id": 3,
      "title": "Africa",
      "body": "Africa has KiliManjaro",
      "height": 5895
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,3

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 3,
    "title": "Africa",
    "body": "Africa has KiliManjaro",
    "height": 5895
}

    patched response  is :{
      "userId": 1,
      "id": 3,
      "title": "Africa",
      "body": "Africa has KiliManjaro",
      "height": 5895
    }


    Patching the an existing resource is sucessful at postid :3

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                         &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.752">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:19&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 2
{
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 2,
      "title": "qui est esse",
      "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :2

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:11 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 987
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=6.0000020312145e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=1KBrg5q9FchROy%2BiZqCOCPCCDEEGh6wrVIoIeP7bS8e5hXaydEQ290QnoGZDp1JUCtshB%2Brez0K6D8ppYIUZ%2FyaClGNDCAcLfJo3iXGyRokES3tt%2BHy6nXAggeoV7yOfFvsfapbtq%2Fg1nLB7JoEE"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e3434a6d54bfdc-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :2Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@bd4ee01status code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.609">
    <system-out><![CDATA[
Scenario Outline: verify the post on social network            &amp#27;[90m# src/main/resources/features/F1_NewPostByExistingUser.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m

    Creating a POST request with values : body: user ID:3 title:post with empty body


    Creating a new resource post :3:post with empty body:

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"post with empty body"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m""&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts(java.lang.Integer,java.lang.String,java.lang.String)&amp#27;[0m
{
    "userId": 3,
    "body": "",
    "title": "post with empty body",
    "id": 101
}

    validated the response and is :{
      "userId": 3,
      "body": "",
      "title": "post with empty body",
      "id": 101
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :201,101

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m201&amp#27;[0m           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m

    The values cannot be verified by retriving using get method to validdate new posted message as this is a mock service

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mconfirm the message/post is as expected by retriving&amp#27;[0m     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.confirm_the_message_post_is_as_expected_by_retriving()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.777">
    <failure message="1 expectation failed.&#10;Expected status code &lt;201&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F2_UpdatingAnExistingPost.feature:9)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Updating the message using put                                                                               &amp#27;[90m# src/main/resources/features/F2_UpdatingAnExistingPost.feature:15&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                            &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 1
{
    "userId": 1,
    "id": 1,
    "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
    "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 1,
      "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
      "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Creating a PUT request with values : body:Acacia is an extremely durable wood user ID:2 postID: 1 title:Acacia Wood


    Updating an existing resource  resource post :2:Acacia Wood:Acacia is an extremely durable wood

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Acacia Wood"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Acacia is an extremely durable wood"&amp#27;[0m&amp#27;[32m to modify with put where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_put_where_post_id_is(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "body": "Acacia is an extremely durable wood",
    "title": "Acacia Wood",
    "id": 1
}

    validated the response and is :{
      "userId": 2,
      "body": "Acacia is an extremely durable wood",
      "title": "Acacia Wood",
      "id": 1
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mI want to verify the response status code  &amp#27;[0m&amp#27;[31m&amp#27;[1m201&amp#27;[0m                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F2_UpdatingAnExistingPost.feature:9)
&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.836">
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                     &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:17&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 3
{
    "userId": 1,
    "id": 3,
    "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
    "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 3,
      "title": "ea molestias quasi exercitationem repellat qui ipsa sit aut",
      "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:3
1****Africa****Africa has KiliManjaro****3****5895

    Creating a PATCH request with values : body:Africa has KiliManjaro user ID:1 postID: 3 title:Africa


    Patching the an existing resource  :1:Africa:Africa has KiliManjaro

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m1&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Africa"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Africa has KiliManjaro"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m3&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m5895&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 3,
    "title": "Africa",
    "body": "Africa has KiliManjaro",
    "height": 5895
}

    validated the response and is :{
      "userId": 1,
      "id": 3,
      "title": "Africa",
      "body": "Africa has KiliManjaro",
      "height": 5895
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m

    New post successfully created and validated, with status code and the postid is :200,3

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the response status code  &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
{
    "userId": 1,
    "id": 3,
    "title": "Africa",
    "body": "Africa has KiliManjaro",
    "height": 5895
}

    patched response  is :{
      "userId": 1,
      "id": 3,
      "title": "Africa",
      "body": "Africa has KiliManjaro",
      "height": 5895
    }


    Patching the an existing resource is sucessful at postid :3

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the if patch is successful&amp#27;[0m                                                                                         &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.3" classname="Examples" time="0.795">
    <system-out><![CDATA[
Scenario Outline: Deleting the post                                                  &amp#27;[90m# src/main/resources/features/F5_DeleteAnExistingPost.feature:19&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                  &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 2
{
    "userId": 1,
    "id": 2,
    "title": "qui est esse",
    "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
}

    Updating the existing resource data:{
      "userId": 1,
      "id": 2,
      "title": "qui est esse",
      "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m

    Deleting the an existing resource  resource post :2

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mdelete where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.delete_where_post_id_is(java.lang.Integer)&amp#27;[0m
{
    
}

    validated the response and is :{}

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
HTTP/1.1 200 OK
Date: Mon, 23 Jan 2023 20:26:25 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2
Connection: keep-alive
X-Powered-By: Express
X-Ratelimit-Limit: 1000
X-Ratelimit-Remaining: 970
X-Ratelimit-Reset: 1674505592
Vary: Origin, Accept-Encoding
Access-Control-Allow-Credentials: true
Cache-Control: no-cache
Pragma: no-cache
Expires: -1
X-Content-Type-Options: nosniff
Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
Via: 1.1 vegur
CF-Cache-Status: DYNAMIC
Server-Timing: cf-q-config;dur=6.0000020312145e-06
Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=KIYxD7sIVs1PFieOGFZ%2FDJCcbc%2BayW77%2BUxMa0TVVBr3ZRW4ceB0a6kLP5VMiI9sfpTPhILyLppwcPh6TiYCjIl410D7owBswZz9sKZX47TYsLaVKRkx04FgAs%2B65UpjvPeNyUEiNQMmXnkned9I"}],"group":"cf-nel","max_age":604800}
NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
Server: cloudflare
CF-RAY: 78e343a33f61f2b8-WAW
alt-svc: h3=":443"; ma=86400, h3-29=":443"; ma=86400

{
    
}

    the post is deleted sucessfully with postid :2Response of the body is emptyio.restassured.internal.ValidatableResponseImpl@217c6a1estatus code is :200

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to verify the post deleted and verify staus code &amp#27;[0m&amp#27;[32m&amp#27;[1m200&amp#27;[0m                    &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_post_deleted_and_verify_staus_code(java.lang.Integer)&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.77">
    <failure message="1 expectation failed.&#10;Expected status code &lt;201&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F3_PatchingAnExistingResource.feature:9)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                     &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:18&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 11
{
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
}

    Updating the existing resource data:{
      "userId": 2,
      "id": 11,
      "title": "et ea vero quia laudantium autem",
      "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m11&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:11
2****Europe****Europe has Mont Blanc****11****4809

    Creating a PATCH request with values : body:Europe has Mont Blanc user ID:2 postID: 11 title:Europe


    Patching the an existing resource  :2:Europe:Europe has Mont Blanc

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Europe"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Europe has Mont Blanc"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m11&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m4809&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "id": 11,
    "title": "Europe",
    "body": "Europe has Mont Blanc",
    "height": 4809
}

    validated the response and is :{
      "userId": 2,
      "id": 11,
      "title": "Europe",
      "body": "Europe has Mont Blanc",
      "height": 4809
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mI want to verify the response status code  &amp#27;[0m&amp#27;[31m&amp#27;[1m201&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F3_PatchingAnExistingResource.feature:9)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mI want to verify the if patch is successful&amp#27;[0m                                                                                         &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="Example #1.4" classname="Examples" time="0.76">
    <failure message="1 expectation failed.&#10;Expected status code &lt;201&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F3_PatchingAnExistingResource.feature:9)
]]></failure>
    <system-out><![CDATA[
Scenario Outline: Updating the message using patching                                                                                     &amp#27;[90m# src/main/resources/features/F3_PatchingAnExistingResource.feature:18&amp#27;[0m

    Request to the end point:https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an existing user of the social network&amp#27;[0m                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_am_an_existing_user_of_the_social_network()&amp#27;[0m

    Setting header:Content-type=application/json; charset=UTF-8

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mhas the  header specification&amp#27;[0m                                                                                                       &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.has_the_header_specification()&amp#27;[0m
POSTID: get 11
{
    "userId": 2,
    "id": 11,
    "title": "et ea vero quia laudantium autem",
    "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
}

    Updating the existing resource data:{
      "userId": 2,
      "id": 11,
      "title": "et ea vero quia laudantium autem",
      "body": "delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\naccusamus in eum beatae sit\nvel qui neque voluptates ut commodi qui incidunt\nut animi commodi"
    }

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI get the existing resource values with user id  with title where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m11&amp#27;[0m                                                     &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_get_the_existing_resource_values_with_user_id_with_title_where_post_id_is(java.lang.Integer)&amp#27;[0m
PATCHIND:11
2****Europe****Europe has Mont Blanc****11****4809

    Creating a PATCH request with values : body:Europe has Mont Blanc user ID:2 postID: 11 title:Europe


    Patching the an existing resource  :2:Europe:Europe has Mont Blanc

  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mmy user id &amp#27;[0m&amp#27;[32m&amp#27;[1m2&amp#27;[0m&amp#27;[32m with title &amp#27;[0m&amp#27;[32m&amp#27;[1m"Europe"&amp#27;[0m&amp#27;[32m posts &amp#27;[0m&amp#27;[32m&amp#27;[1m"Europe has Mont Blanc"&amp#27;[0m&amp#27;[32m to modify with patch where post id is &amp#27;[0m&amp#27;[32m&amp#27;[1m11&amp#27;[0m&amp#27;[32m with mt height &amp#27;[0m&amp#27;[32m&amp#27;[1m4809&amp#27;[0m&amp#27;[32m values&amp#27;[0m &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.my_user_id_with_title_posts_to_modify_with_patch_where_post_id_is_with_mt_height_values(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)&amp#27;[0m
{
    "userId": 2,
    "id": 11,
    "title": "Europe",
    "body": "Europe has Mont Blanc",
    "height": 4809
}

    validated the response and is :{
      "userId": 2,
      "id": 11,
      "title": "Europe",
      "body": "Europe has Mont Blanc",
      "height": 4809
    }

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mverify the response body&amp#27;[0m                                                                                                           &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.verify_the_response_body()&amp#27;[0m
  &amp#27;[31mAnd &amp#27;[0m&amp#27;[31mI want to verify the response status code  &amp#27;[0m&amp#27;[31m&amp#27;[1m201&amp#27;[0m                                                                                      &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(java.lang.Integer)&amp#27;[0m
      &amp#27;[31mjava.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
	at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
	at io.restassured.specification.ResponseSpecification$statusCode$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_response_status_code(BasicCURD_Ops_Definations.java:103)
	at ✽.I want to verify the response status code  201(file:///Users/hema/eclipse-workspace/SocialNetworkingCommunity/src/main/resources/features/F3_PatchingAnExistingResource.feature:9)
&amp#27;[0m
  &amp#27;[36mAnd &amp#27;[0m&amp#27;[36mI want to verify the if patch is successful&amp#27;[0m                                                                                         &amp#27;[90m# StepDefinations.BasicCURD_Ops_Definations.i_want_to_verify_the_if_patch_is_successful()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the comments under single post" classname="verify endpoint services using different query parameters" time="0.296">
    <system-out><![CDATA[
Scenario: verify the comments under single post             &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:10&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                         &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the comments under postid <postid>&amp#27;[0m    &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_under_postid_postid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postid |
    | 1      |

    Comment size for the user is expected :5

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI validate that <commentscount> comments are present&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_validate_that_commentscount_comments_are_present(io.cucumber.datatable.DataTable)&amp#27;[0m
    | commentscount |
    | 5             |
[
  {
    "postId": 1,
    "id": 1,
    "name": "id labore ex et quam laborum",
    "email": "Eliseo@gardner.biz",
    "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
  },
  {
    "postId": 1,
    "id": 2,
    "name": "quo vero reiciendis velit similique earum",
    "email": "Jayne_Kuhic@sydney.com",
    "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
  },
  {
    "postId": 1,
    "id": 3,
    "name": "odio adipisci rerum aut animi",
    "email": "Nikita@garfield.biz",
    "body": "quia molestiae reprehenderit quasi aspernatur\naut expedita occaecati aliquam eveniet laudantium\nomnis quibusdam delectus saepe quia accusamus maiores nam est\ncum et ducimus et vero voluptates excepturi deleniti ratione"
  },
  {
    "postId": 1,
    "id": 4,
    "name": "alias odio sit",
    "email": "Lew@alysha.tv",
    "body": "non et atque\noccaecati deserunt quas accusantium unde odit nobis qui voluptatem\nquia voluptas consequuntur itaque dolor\net qui rerum deleniti ut occaecati"
  },
  {
    "postId": 1,
    "id": 5,
    "name": "vero eaque aliquid doloribus et culpa",
    "email": "Hayden@althea.biz",
    "body": "harum non quasi et ratione\ntempore iure ex voluptates in ratione\nharum architecto fugit inventore cupiditate\nvoluptates magni quo et"
  }
]


    the Comments for the post are verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the response&amp#27;[0m                                 &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_response()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the comments under single post" classname="verify endpoint services using different query parameters" time="0.184">
    <system-out><![CDATA[
Scenario: verify the comments under single post             &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:10&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                         &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the comments under postid <postid>&amp#27;[0m    &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_under_postid_postid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postid |
    | 1      |

    Comment size for the user is expected :5

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI validate that <commentscount> comments are present&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_validate_that_commentscount_comments_are_present(io.cucumber.datatable.DataTable)&amp#27;[0m
    | commentscount |
    | 5             |
[
  {
    "postId": 1,
    "id": 1,
    "name": "id labore ex et quam laborum",
    "email": "Eliseo@gardner.biz",
    "body": "laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium"
  },
  {
    "postId": 1,
    "id": 2,
    "name": "quo vero reiciendis velit similique earum",
    "email": "Jayne_Kuhic@sydney.com",
    "body": "est natus enim nihil est dolore omnis voluptatem numquam\net omnis occaecati quod ullam at\nvoluptatem error expedita pariatur\nnihil sint nostrum voluptatem reiciendis et"
  },
  {
    "postId": 1,
    "id": 3,
    "name": "odio adipisci rerum aut animi",
    "email": "Nikita@garfield.biz",
    "body": "quia molestiae reprehenderit quasi aspernatur\naut expedita occaecati aliquam eveniet laudantium\nomnis quibusdam delectus saepe quia accusamus maiores nam est\ncum et ducimus et vero voluptates excepturi deleniti ratione"
  },
  {
    "postId": 1,
    "id": 4,
    "name": "alias odio sit",
    "email": "Lew@alysha.tv",
    "body": "non et atque\noccaecati deserunt quas accusantium unde odit nobis qui voluptatem\nquia voluptas consequuntur itaque dolor\net qui rerum deleniti ut occaecati"
  },
  {
    "postId": 1,
    "id": 5,
    "name": "vero eaque aliquid doloribus et culpa",
    "email": "Hayden@althea.biz",
    "body": "harum non quasi et ratione\ntempore iure ex voluptates in ratione\nharum architecto fugit inventore cupiditate\nvoluptates magni quo et"
  }
]


    the Comments for the post are verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the response&amp#27;[0m                                 &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_response()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the posts by a user" classname="verify endpoint services using different query parameters" time="0.399">
    <system-out><![CDATA[
Scenario: verify the posts by a user                         &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:19&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                          &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the users userid <userid> filter posts&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_users_userid_userid_filter_posts(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 1      |
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to read the posts filter by user <userid>&amp#27;[0m       &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_posts_filter_by_user_userid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 1      |

    Comment size for the user is expected :10

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mvalidate that total posts are <postscount>&amp#27;[0m            &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_that_total_posts_are_postscount(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postscount |
    | 10         |

    the posts by the user is verified


    the posts by the user is verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the responses and both end points&amp#27;[0m             &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_responses_and_both_end_points()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the posts by a user" classname="verify endpoint services using different query parameters" time="0.364">
    <system-out><![CDATA[
Scenario: verify the posts by a user                         &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:19&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                          &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the users userid <userid> filter posts&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_users_userid_userid_filter_posts(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 1      |
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to read the posts filter by user <userid>&amp#27;[0m       &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_posts_filter_by_user_userid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 1      |

    Comment size for the user is expected :10

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mvalidate that total posts are <postscount>&amp#27;[0m            &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_that_total_posts_are_postscount(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postscount |
    | 10         |

    the posts by the user is verified


    the posts by the user is verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the responses and both end points&amp#27;[0m             &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_responses_and_both_end_points()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the comments by a filtering postid" classname="verify endpoint services using different query parameters" time="0.671">
    <system-out><![CDATA[
Scenario: verify the comments by a filtering postid           &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:31&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                           &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the comments with <postid> filter posts&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_with_postid_filter_posts(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postid |
    | 3      |
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to read the comments filter by postid <postid>&amp#27;[0m   &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_filter_by_postid_postid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 3      |

    Comment size for the user is expected :5

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mvalidate that total posts are <postscount>&amp#27;[0m             &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_that_total_posts_are_postscount(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postscount |
    | 5          |

    the posts by the user is verified


    the posts by the user is verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the responses and both end points&amp#27;[0m              &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_responses_and_both_end_points()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the comments by a filtering postid" classname="verify endpoint services using different query parameters" time="0.35">
    <system-out><![CDATA[
Scenario: verify the comments by a filtering postid           &amp#27;[90m# src/main/resources/features/F4_FilteringthroughQueryParams.feature:31&amp#27;[0m
  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am a user&amp#27;[0m                                           &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_am_a_user()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI want to read the comments with <postid> filter posts&amp#27;[0m &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_with_postid_filter_posts(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postid |
    | 3      |
  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mI want to read the comments filter by postid <postid>&amp#27;[0m   &amp#27;[90m# StepDefinations.FilterOptionsDefinations.i_want_to_read_the_comments_filter_by_postid_postid(io.cucumber.datatable.DataTable)&amp#27;[0m
    | userid |
    | 3      |

    Comment size for the user is expected :5

  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mvalidate that total posts are <postscount>&amp#27;[0m             &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_that_total_posts_are_postscount(io.cucumber.datatable.DataTable)&amp#27;[0m
    | postscount |
    | 5          |

    the posts by the user is verified


    the posts by the user is verified

  &amp#27;[32mAnd &amp#27;[0m&amp#27;[32mvalidate the responses and both end points&amp#27;[0m              &amp#27;[90m# StepDefinations.FilterOptionsDefinations.validate_the_responses_and_both_end_points()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the posts and the details" classname="User reads the posts" time="0.168">
    <system-out><![CDATA[
Scenario: verify the posts and the details &amp#27;[90m# src/main/resources/features/F7_GetTheExistingPostDetails.feature:3&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI can access the posts&amp#27;[0m              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_can_access_the_posts()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI want to read the posts&amp#27;[0m            &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_read_the_posts()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
  <testcase name="verify the posts and the details" classname="User reads the posts" time="0.17">
    <system-out><![CDATA[
Scenario: verify the posts and the details &amp#27;[90m# src/main/resources/features/F7_GetTheExistingPostDetails.feature:3&amp#27;[0m

    End point url of the posts is :https://jsonplaceholder.typicode.com/posts

  &amp#27;[32mGiven &amp#27;[0m&amp#27;[32mI am an user of the social network&amp#27;[0m &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_am_an_user_of_the_social_network()&amp#27;[0m
  &amp#27;[32mWhen &amp#27;[0m&amp#27;[32mI can access the posts&amp#27;[0m              &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_can_access_the_posts()&amp#27;[0m
  &amp#27;[32mThen &amp#27;[0m&amp#27;[32mI want to read the posts&amp#27;[0m            &amp#27;[90m# StepDefinations.ReadingExistngPostDetailsDefns.i_want_to_read_the_posts()&amp#27;[0m
This will run after the Scenario
]]></system-out>
  </testcase>
</testsuite>